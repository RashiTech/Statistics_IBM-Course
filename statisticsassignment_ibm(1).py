# -*- coding: utf-8 -*-
"""StatisticsAssignment_IBM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1InyFpxMJygR50F9nHZ7O92YHFNJ-1qe9

#Statistical Analysis of US Housing Prices
"""

import pandas as pd

from matplotlib import pyplot as plt
import seaborn as sns

boston_url = 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-ST0151EN-SkillsNetwork/labs/boston_housing.csv'
boston_df=pd.read_csv(boston_url)

boston_df

plt.boxplot(boston_df['MEDV'])
plt.title("Median Values of Owner occupied homes")
plt.show()

"""Median value of owner occupied homes is $22,000"""

chas = boston_df['CHAS'].unique()
a =  len(boston_df[boston_df['CHAS']==1])
b =  len(boston_df[boston_df['CHAS']==0])
plt.bar(chas,[b,a], width = 0.5)

plt.title("Value for charles river factor")
plt.xlabel("'CHAS'")
plt.ylabel("Count of Houses")
plt.show()
print(chas)

"""More houses are not bound by River charles"""

boston_df.loc[boston_df['AGE'] <= 35, 'AGEv'] = 'Younger than 35 years'

boston_df.loc[(boston_df['AGE'] > 35) & (boston_df['AGE'] < 70), 'AGEv'] = 'Between 35 and 70 years'
boston_df.loc[boston_df['AGE'] >=70 , 'AGEv'] = 'More than 70 years'

sns.boxplot( data = boston_df, y='MEDV', x = 'AGEv')

"""Explanation :
The median value is highest for the Younger people (are living in most expensive owner occupied houses). Middle aged people are ranking 2. Lowest median value are of those Homes whosse owners age is more than 70 years.
"""

sns.scatterplot(data = boston_df, y='INDUS', x = 'NOX')

"""High Nitric oxide concentrations are having low proportion of non-retail business acres per town"""

sns.histplot(boston_df["PTRATIO"])

"""EXPLANATION
PTRATIO is left skewed with mean around 18. Majority places tend to have a higher Pupil to teacher ratio.
"""

from scipy.stats import ttest_ind, f_oneway, pearsonr

"""NULL HYPOTHESIS- TEST 1

aplha= 0.05
H0 =  the median values for houses are independent of charles river proximity

ALTERNATE HYPOTHESIS- TEST 1

H1 = the median values for houses are not independent of charles river proximity
"""

ttest_ind(boston_df[boston_df['CHAS']==1]['MEDV'], boston_df[boston_df['CHAS']==0]['MEDV'])

"""Pvallue for this statistic is lower than 0.05 hence we reject the null hypothesis. the median values for houses are not independent of charles river proximity"""

dataset = [boston_df[boston_df['AGEv']==x]['MEDV'] for x in boston_df['AGEv'].unique()]

"""NULL HYPOTHESIS- TEST 2
Ho = the median values have same mean across all three defined age groups 


alpha=0.05


ALTERNATE HYPOTHESIS- TEST 2
H1= the median values of atleast two groups is different 
"""

f_oneway(dataset[0],dataset[1],dataset[2])

"""RESULT

Since pvalue is way too lower than the alpha value, we reject null hypothesis. we conclude that the median values of atleast two groups is different

NULL HYPOTHESIS- TEST 3


Ho = there is no relationship between NOX concentration and number of non-retail business setups.

alpha =0.05


ALTERNATE HYPOTHESIS- TEST 3


H1=  NOX concentration is impacting the number of non-retail business setups.
"""

pearsonr( boston_df['NOX'] , boston_df['INDUS'])

"""Nox moderately high influence over non-retail business """

import statsmodels.api as sm

"""NULL HYPOTHESIS- TEST 4


Ho = there is no relationship between the Median Values of houses and their distance from the five Boston employment centres


alpha =0.05


ALTERNATE HYPOTHESIS- TEST 4


H1=  the Median Values of houses are impaced by their distance from the five Boston employment centres
"""

X = boston_df['DIS']
y= boston_df['MEDV']
X = sm.add_constant(X)
model  = sm.OLS(y,X).fit()

model.summary()

"""RESULT

R-square value  is 0.062 . Coefficient of corelation is square root of 0.062 = 0.25.


Median Values are positively (moderate impact) linear relation with the distance from the five Boston employment centres. I conclude that the high value home owners prefer to stay far from the hustle bustle of employemnt centres and prefer peaceful surroundings.
"""

sns.scatterplot(data = boston_df, y='MEDV', x = 'DIS')

